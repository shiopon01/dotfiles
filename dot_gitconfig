# git config --global user.name yourname
# git config --global user.email youremail

[user]
  name = shiopon01
  email = shio.0323@gmail.com

[core]
  autoCRLF = false
  autoLF = false
  editor = vim -c \"set fenc=utf-8\"
  precomposeunicode = true
  quotepath = false
  # excludesfile = ~/rc/git/global_ignore

[color]
  diff = auto
  status = auto
  branch = auto

[ghq]
  root = ~/Work/src

[credential]

[alias]
  # 標準的なコマンド
  b = branch
  c = commit
  cm = commit -m
  f = fetch
  s = status
  st = stash
  rh = reset --hard

  # リモート含めブランチをcheckoutする
  co = "!f() { args=$@; if [ -z \"$args\" ]; then branch=$(git branch --all | grep -v HEAD | fzf --preview 'echo {} | cut -c 3- | xargs git log --color=always'); git checkout $(echo $branch | sed 's#remotes/[^/]*/##'); else git checkout $args; fi }; f"

  # ファイルの差分をプレビュー付きで確認する
  d = "!f() { args=$@; [ -z \"$args\" ] && args=HEAD; ([ \"$args\" = \"HEAD\" ] && git status --short || git diff --name-status $args | sed 's/\t/  /') | fzf --preview \"echo {} | cut -c 4- | xargs git diff --color=always $args --\" --multi --height 90% | cut -c 4-; }; f"

  # 差分を選択してaddする
  da = !git d | xargs git add --

  # 差分を選択してadd -pする
  dap = "!f() { for f in $(git d); do git add -p -- $f; done }; f"

  # 差分を選択してresetする
  dr = !git d | xargs git reset --

  # 差分を選択してHEADにcheckoutする
  dch = !git d | xargs git checkout HEAD

  # 現在のブランチをpullする
  pl = "!f() { args=$@; [ -z \"$args\" ] && git pull origin $(git symbolic-ref --short HEAD) || git pull $args; }; f"

  # 現在のブランチをpushする
  ps = "!f() { args=$@; [ -z \"$args\" ] && git push origin HEAD || git push $args; }; f"

  # スタッシュのリストを表示する
  stl = !git stash list | fzf --preview 'echo {} | grep -o stash@{.*} | xargs git stash show -p --color=always' --height 90% | grep -o stash@{.*}

  # スタッシュを選択してapplyする
  sta = !git stl | xargs git stash apply

  # スタッシュを選択してdropする
  std = !git stl | xargs git stash drop

  # git-czのalias
  cz = !git-cz

